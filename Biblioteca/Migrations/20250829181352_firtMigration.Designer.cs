// <auto-generated />
using System;
using Biblioteca.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Biblioteca.Migrations
{
    [DbContext(typeof(AplicationDbContent))]
    [Migration("20250829181352_firtMigration")]
    partial class firtMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Biblioteca.Models.Libro", b =>
                {
                    b.Property<int>("_idLibro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("_idLibro"));

                    b.Property<string>("_autor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("_añoDePublicacion")
                        .HasColumnType("int");

                    b.Property<string>("_genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("_idLibro");

                    b.ToTable("Libros");
                });

            modelBuilder.Entity("Biblioteca.Models.Prestamo", b =>
                {
                    b.Property<int>("_idPrestamo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("_idPrestamo"));

                    b.Property<DateTime>("_fechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("_fechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("_idLibro")
                        .HasColumnType("int");

                    b.Property<int>("_idUsuario")
                        .HasColumnType("int");

                    b.HasKey("_idPrestamo");

                    b.HasIndex("_idLibro");

                    b.HasIndex("_idUsuario");

                    b.ToTable("Prestamos");
                });

            modelBuilder.Entity("Biblioteca.Models.Usuario", b =>
                {
                    b.Property<int>("_idUsario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("_idUsario"));

                    b.Property<string>("_direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_numeroTelefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("_idUsario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Biblioteca.Models.Prestamo", b =>
                {
                    b.HasOne("Biblioteca.Models.Libro", "Libro")
                        .WithMany("Prestamos")
                        .HasForeignKey("_idLibro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Biblioteca.Models.Usuario", "Usuario")
                        .WithMany("Prestamos")
                        .HasForeignKey("_idUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Libro");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Biblioteca.Models.Libro", b =>
                {
                    b.Navigation("Prestamos");
                });

            modelBuilder.Entity("Biblioteca.Models.Usuario", b =>
                {
                    b.Navigation("Prestamos");
                });
#pragma warning restore 612, 618
        }
    }
}
